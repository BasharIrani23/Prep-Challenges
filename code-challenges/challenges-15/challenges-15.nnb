{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "## Hacker Rank\n\nFor Thursdays you will be solving some selected challenges on HackerRank, please create an account if you don't have then\nFollow the links below:\nread them carefully and solve them then copy-paste your solution below in Code Block"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### **Required**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Equality In An Array](https://www.hackerrank.com/challenges/equality-in-a-array/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "function equalizeArray(arr) {\n    const frequencyMap = new Map();\n  \n    // Count the frequency of each element\n    for (const num of arr) {\n      if (frequencyMap.has(num)) {\n        frequencyMap.set(num, frequencyMap.get(num) + 1);\n      } else {\n        frequencyMap.set(num, 1);\n      }\n    }\n  \n    // Find the maximum frequency\n    let maxFrequency = 0;\n    for (const frequency of frequencyMap.values()) {\n      if (frequency > maxFrequency) {\n        maxFrequency = frequency;\n      }\n    }\n  \n    // Return the difference between the array length and the maximum frequency\n    return arr.length - maxFrequency;\n  }\n  "
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### **Optional**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Halloween Sale](https://www.hackerrank.com/challenges/halloween-sale/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "function howManyGames(p, d, m, s) {\n    let count = 0;\n  \n    while (s >= p) {\n      count++;\n      s -= p;\n      p = Math.max(p - d, m);\n    }\n  \n    return count;\n  }\n  "
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Sherlock And Squares](https://www.hackerrank.com/challenges/sherlock-and-squares/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                ""
            ],
            "outputs": []
        }
    ]
}